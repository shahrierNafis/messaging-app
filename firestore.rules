rules_version = '2';

service cloud.firestore {
      match /databases/{database}/documents {
            match /rooms/{roomID} {
                  allow read, update: if request.auth.uid in resource.data.members
                  allow write: if request.auth.uid != null

                  match /messages/{message} {
                        allow read, write:if request.auth.uid in get(/databases/$(database)/documents/rooms/$(roomID)).data.members
                        allow update, delete:if request.auth.uid == resource.data.author
                  }
            }
            match /users/{UID} {
                  allow read: if request.auth != null 

                  match /conversations/{OUID} {
                        allow read, write: if request.auth.uid == UID
                              || request.auth.uid == OUID
                  }
                  match /posts/{post=**} {
                        allow read:if request.auth != null
                        allow write: if request.auth.uid==UID;

                        match /comments/{comment} {
                              allow write: if request.resource.data.author==request.auth.uid
                        }
                        match /reactions/{reaction} {
                              allow write: if (request.resource.data.reactors.hasOnly([request.auth.uid])
                                    || request.resource.data.reactors.size() == 0)
                                    && reaction.size() == 2
                              allow update:if request.resource.data.reactors.removeAll([request.auth.uid])
                              .hasOnly(resource.data.reactors.removeAll([request.auth.uid]))
                                    && !request.resource.data.diff(resource.data).affectedKeys()
                              .hasAny(['emoji']);
                        }
                  }
            }
      }
}
